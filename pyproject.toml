[tool.poetry]
name = "supervisord_watchdog"
version = "0.1.0"
description = """A Python package which monitors the state of supervisord processes, and \
terminates the container if any of the critical processes terminate, \
if any of the processes crash, and optionally if all processes have terminated."""
authors = [
    "Morgan Saville <msaville@microsoft.com>",
    "Huw Thomas <huwthomas@microsoft.com>"
]

[tool.poetry.scripts]
supervisord_watchdog = "supervisord_watchdog.watchdog:main"

[tool.poetry.dependencies]
python = "^3.9"
supervisor = "^4.2.0"
types-setuptools = "^69.0.0.0"
docker = "^7.0.0"

[tool.poetry.dev-dependencies]
pytest = "^7.4.3"
ruff = "^0.2.2"

[tool.poetry.extras]
test = ["pytest"]

[tool.pytest]
mock_use_standalone_module = true

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--strict-markers"
]

log_format = "%(asctime)s supervisord_watchdog [%(levelname)-5.5s] %(message)s"
log_date_format = "%Y-%m-%dT%H:%M:%S"
log_level = "INFO"
log_cli = true
log_cli_level = "INFO"
log_file = "pytest.log"
log_file_level = 0
log_file_format = "%(asctime)s.%(msecs)03d %(filename)s:%(lineno)d %(levelname)s %(message)s"
log_file_date_format = "%Y-%m-%dT%H:%M:%S"

testpaths = ["tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
